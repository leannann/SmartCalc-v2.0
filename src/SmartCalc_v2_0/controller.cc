#include "controller.h"

/**
 * @brief Вычисляет результат математического выражения с учетом константы x.
 *
 * Эта функция передает входную строку математического выражения
 * и значение константы x в функцию вычисления результата в модели,
 * используя объект модели. После вычисления результат получает
 * из модели и возвращает его.
 *
 * @param input Входная строка математического выражения.
 * @param x Значение константы x.
 * @return Результат вычисления математического выражения с учетом константы x.
 */
double s21::Controller::resultController(std::string input,
                                         double x) const noexcept {
  model->resultModel(input, x);
  return model->getData();
}

/**
 * @brief Проверяет корректность ввода математического выражения.
 *
 * Эта функция передает входную строку математического выражения
 * в функцию проверки корректности ввода в модели, используя объект модели.
 * Если модель возвращает истину, функция также возвращает истину.
 * Это позволяет проверить корректность ввода выражения с помощью модели.
 *
 * @param input Входная строка математического выражения.
 * @return true, если входное выражение корректно, иначе false.
 */
bool s21::Controller::checkInputCorrect(
    const std::string input) const noexcept {
  return model->checkInputCorrect(input);
}

/**
 * @brief Проверяет введенную строку на корректность как числового значения.
 *
 * Данная функция делегирует проверку входной строки валидатору модели.
 * Возвращает результат проверки валидатора модели для данной строки.
 *
 * @param input Входная строка для проверки на корректность числового значения.
 * @return true, если введенная строка корректно представляет число, в противном
 * случае false.
 */
bool s21::Controller::validatorController(std::string input) const noexcept {
  // Вызываем метод валидации модели для входной строки и возвращаем результат
  return model->validator(input);
}
