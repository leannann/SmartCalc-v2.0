/*!
\file
\brief Заголовочный файл с объявлениям класса Deposit для работы с
пользовательским интерфейссом депозитного калькулятора
*/

#ifndef CPP3_SMARTCALC_V2_0_1_SMARTCALC_V2_0_DEPOSITVIEW_H_
#define CPP3_SMARTCALC_V2_0_1_SMARTCALC_V2_0_DEPOSITVIEW_H_

#include <QMainWindow>

#include "depositModel.h"

namespace Ui {
class Deposit;
}

namespace s21 {
/**
 * @brief Класс для работы с пользовательским интерфейсом депозитного
 * калькулятора.
 *
 * Этот класс управляет главным окном депозитного калькулятора, обработкой
 * событий и взаимодействием с интерфейсом пользователя.
 */
class Deposit : public QMainWindow {
  Q_OBJECT

 public:
  /**
   * @brief Конструктор класса.
   *
   * Создает объект класса Deposit.
   *
   * @param parent Указатель на родительский виджет (по умолчанию nullptr).
   *
   * @note Конструктор вызывается при создании объекта класса.
   */
  explicit Deposit(QWidget* parent = nullptr) noexcept;

  /**
   * @brief Деструктор класса.
   *
   * Удаляет объект класса Deposit.
   */
  ~Deposit();

  int flag = 0; /**< Флаг для определения типа депозита. */
  double periodicity = 0.; /**< Периодичность пополнения/снятия средств. */

 private slots:
  /**
   * @brief Обработчик события клика по кнопке "Рассчитать".
   *
   * Вызывает функцию расчета депозита и обновляет данные в пользовательском
   * интерфейсе.
   *
   * @note Функция вызывается при клике по кнопке "Рассчитать" в
   * пользовательском интерфейсе.
   */
  void on_calculate_clicked() noexcept;

  /**
   * @brief Обработчик события клика по флажку.
   *
   * Устанавливает значение флага в зависимости от состояния флажка.
   *
   * @param checked Состояние флажка (выбран/не выбран).
   *
   * @note Функция вызывается при клике по флажку в пользовательском интерфейсе.
   */
  void on_flag_clicked(bool checked) noexcept;

  /**
   * @brief Обработчик события выбора опции из выпадающего списка пополнения.
   *
   * Устанавливает значение переменной periodicity в зависимости от выбранной
   * опции.
   *
   * @param index Индекс выбранной опции в выпадающем списке.
   *
   * @note Функция вызывается при выборе опции из выпадающего списка пополнения
   * в пользовательском интерфейсе.
   */
  void on_dropdown_replemishment_activated(int index) noexcept;

  /**
   * @brief Обработчик события выбора опции из выпадающего списка снятия
   * средств.
   *
   * Устанавливает значение переменной periodicity в зависимости от выбранной
   * опции.
   *
   * @param index Индекс выбранной опции в выпадающем списке.
   *
   * @note Функция вызывается при выборе опции из выпадающего списка снятия
   * средств в пользовательском интерфейсе.
   */
  void on_dropdown_withdraw_activated(int index) noexcept;

 private:
  Ui::Deposit* ui; /**< Указатель на объект пользовательского интерфейса. */
  s21::DepositCalculator depositCalculator; /**< Объект для расчета депозита. */

  /**
   * @brief Проверяет строку на корректное представление числа.
   *
   * Данная функция проверяет, представляет ли входная строка корректное число.
   * Считается, что строка представляет число, если:
   * - Все символы в строке являются цифрами или одной точкой ('.').
   * - Строка не начинается и не заканчивается точкой.
   * - Строка не содержит подряд идущих точек.
   *
   * @param input Входная строка для проверки.
   * @return true, если входная строка представляет корректное число, в
   * противном случае false.
   */
  bool validator(std::string input) const noexcept;
};
}  // namespace s21
#endif  // CPP3_SMARTCALC_V2_0_1_SMARTCALC_V2_0_DEPOSITVIEW_H_
